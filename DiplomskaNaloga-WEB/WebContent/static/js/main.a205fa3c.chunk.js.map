{"version":3,"sources":["combined/Checkbox.jsx","admin/SuggestBox.jsx","combined/Paginator.jsx","combined/Table.jsx","util/dateFormat.js","combined/PregledDiplomskihDel.jsx","admin/AdminNavBar.jsx","admin/Admin.jsx","admin/AddChangeSifrantiTable.jsx","admin/AddChangeSifranti.jsx","admin/ChangeDiplomskoDelo.jsx","modals/AddUserModal.jsx","modals/ChnageRolesModal.jsx","admin/AddUser.jsx","admin/AddChangeUser.jsx","App.js","serviceWorker.js","index.js"],"names":["Checkbox","label","selected","onChange","name","useState","selectedState","setSelectedState","useEffect","type","checked","value","e","target","SuggestBox","results","choosenElement","className","length","map","el","idx","key","onClick","Paginator","numberOfPages","page","filtirajClick","pg","setPage","style","width","Table","diplomskaDela","readOnly","catalogue","reFetchDiplomskaDela","studentSearch","editable","setEditable","diplomskoDeloData","setDiplomskoDeloData","searchProfesor","setSearchProfesor","setResults","scope","date","id","dijak","program","naslov","datum","profesor","zavod","vrstaStudija","code","moment","format","fetch","method","headers","body","then","response","json","res","strings","inputProfesorName","chooseStudent","JSON","stringify","i","PregledDiplomskihDel","props","setDiplosmkaDela","setNumberOfPages","selectedProgramIds","setSelectedProgramIds","selectedZavodsIds","setSelectedZavodIds","selectedVrstaStudijaIds","setSelectedVrstaStudijaIds","selectedProfesorIds","setSelectedProfesorIds","letoFilter","setLetoFilter","leta","useCallback","programs","zavods","vrste","profesors","leto","result","Math","ceil","vrstaStudijaId","arr","push","index","indexOf","splice","onVrstaStudijaChangeHandler","vrsta","programId","onProgramChangeHandler","zavodId","onZavodChangeHandler","maxHeight","overflowY","profesorId","onProfesorChangeHandler","htmlFor","window","open","withRouter","roles","handleClick","str","history","borderBottom","location","reload","Admin","AddChangeSifrantiTable","title","twoInputs","reFetchCatalogue","hoovered","setHoovered","clicked","setClicked","stevilka","setStevilka","setVrsta","onMouseEnter","onMouseLeave","imePriimek","remove","placeholder","resp","save","AddChangeSifranti","ChangeDiplomskoDelo","file","setFile","setStudentSearch","setDiplomskaDela","novoDiplomskoDelo","setNovoDiplomskoDelo","profesorResults","setProfesorResults","diplomskoDelo","inputStudentName","data","files","fileUpload","preventDefault","formData","FormData","append","onSubmit","vpisnaStevilka","imeDijaka","imeDiplome","datumDiplome","imeProf","chooseProfesor","obj","shraniDiplomskoDelo","AddUserModal","onCloseHandle","show","fetchUsers","usernamePass","setUsernamePass","Modal","padding","backgroundColor","color","maxWidth","username","password","ChnageRolesModal","uporabnik","role","reFetchRolesForUser","allRoles","colorBlue","ele","removeRole","addRole","AddUser","choosenUser","setChoosenUser","uporabniki","setUporabniki","setRole","showModal","setShowModal","showModalAddUser","setShowModalAddUser","fetchRoles","user","AddChangeUser","App","setCatalogue","setPrograms","setVrstaStudija","setZavods","setProfesor","setLeta","fetchCatalogue","exact","path","programIds","zavodIds","vrstaIds","profesorIds","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a205fa3c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function Checkbox({ label, selected, onChange, name }) {\r\n\r\n    const [selectedState, setSelectedState] = useState(selected);\r\n\r\n    const handleChange = e => {\r\n        const { checked } = e.target\r\n        // selected = !selected\r\n        setSelectedState(checked)\r\n        onChange(checked);\r\n    }\r\n\r\n   useEffect(() => {\r\n        setSelectedState(selected);\r\n   }, [selected])\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" name={name} checked={selectedState} value={selected} onChange={handleChange} />\r\n                &nbsp;{label}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SuggestBox({results, choosenElement}) {\r\n    return (\r\n        <div className=\"border scrollBar\">\r\n            {\r\n            results && results.length > 0 && results.map((el, idx) => {\r\n                return(\r\n                    <div className=\"border-bottom\" key={idx} onClick={() => choosenElement(el)}>{el}</div>\r\n                )\r\n            })  \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n    ","import React, { useState } from 'react'\r\nimport { useRef } from 'react';\r\n\r\nexport default function Paginator({numberOfPages, page, filtirajClick}) {\r\n\r\n    const [pg, setPage] = useState(page);\r\n    // const currentPage = useRef(pg);\r\n    const checkIfChangePageUp = () => {\r\n        if(pg + 1 <= numberOfPages) {\r\n            filtirajClick(pg + 1); \r\n            setPage(pg + 1);\r\n        }\r\n    }\r\n    \r\n    const checkIfChangePageDown = () => {\r\n        if(pg - 1 >= 1) {\r\n            filtirajClick(pg - 1);\r\n            setPage(pg - 1);\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <div className=''>\r\n            {\r\n                <div className=\"d-flex flex-row align-items-center\">\r\n                    <i className=\"fas fa-chevron-circle-left fa-2x\" onClick={() => {filtirajClick(1); setPage(1)}} />\r\n                    <i className=\"fas fa-angle-left fa-2x\" onClick={() => {checkIfChangePageDown()}} />\r\n                    <div className=\"border d-flex flex-row align-items-center px-3\" style={{width: '70px'}}>\r\n                        <div>{pg}</div>\r\n                        <div>/</div>\r\n                        <div>{numberOfPages}</div>\r\n                    </div>\r\n                    <i className=\"fas fa-angle-right fa-2x\" onClick={() => {checkIfChangePageUp()}} />\r\n                    <i className=\"fas fa-chevron-circle-right fa-2x\" onClick={() => {filtirajClick(numberOfPages); setPage(numberOfPages)}} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport SuggestBox from '../admin/SuggestBox';\r\nimport { formatDate } from '../util/dateFormat';\r\nimport Paginator from './Paginator.jsx';\r\n\r\nexport default function Table({diplomskaDela, page, numberOfPages, readOnly, catalogue, reFetchDiplomskaDela, studentSearch, filtirajClick}) {\r\n    const [editable, setEditable] = useState(false);\r\n    const [diplomskoDeloData, setDiplomskoDeloData] = useState({});\r\n    const [searchProfesor, setSearchProfesor] = useState();\r\n    const [results, setResults] = useState();\r\n\r\n    const saveToDB = (id) => {\r\n        fetch('/rest/diplomskaDela/saveDiplomskoDeloById', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({...diplomskoDeloData, id: id})\r\n          }).then(() => reFetchDiplomskaDela(studentSearch))\r\n    }\r\n\r\n    const inputProfesorName = (e) => {\r\n      setSearchProfesor(e.target.value);\r\n      if(e.target.value !== \"\") {\r\n        fetch('/rest/profesor/search', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'text/html' },\r\n          body: e.target.value,\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => setResults(res.strings))\r\n      }\r\n      else {\r\n        setResults(null);\r\n      }\r\n    }\r\n\r\n    const chooseStudent = (profesor) => {\r\n      setSearchProfesor(profesor); \r\n      setResults(null); \r\n      setDiplomskoDeloData({...diplomskoDeloData, profesor: profesor ? profesor : \"\"})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <table className=\"table table-striped table-dark\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\"></th>\r\n              <th scope=\"col\">Avtor</th>\r\n              <th scope=\"col\">Program</th>\r\n              <th scope=\"col\">Naslov</th>\r\n              <th scope=\"col\">Datum</th>\r\n              <th scope=\"col\">Mentor</th>\r\n              <th scope=\"col\">Zavod</th>\r\n              <th scope=\"col\">Redni / Izredni</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {diplomskaDela &&\r\n              diplomskaDela.map((el, idx) => {\r\n                let whatToReturn = (editable !== el.id) ? \r\n                <tr key={idx}>\r\n                <td>{page ? page * 30 + idx + 1 - 30 : idx + 1}.</td>\r\n                <td>{el.dijak}</td>\r\n                <td>{el.program}</td>\r\n                <td>{el.naslov}</td>\r\n                <td>{el.datum}</td>\r\n                <td>{el.profesor}</td>\r\n                <td>{el.zavod}</td>\r\n                <td>{el.vrstaStudija}</td>\r\n                <td>\r\n                    {!readOnly && (editable !== el.id) && <i className=\"fas fa-pencil-alt\" onClick={() => setEditable(el.id)}/>}\r\n                </td>\r\n                \r\n                </tr>\r\n                :\r\n                <tr key={idx}>\r\n                <td>{page ? page * 30 + idx + 1 - 30 : idx + 1}.</td>\r\n                <td>{el.dijak}</td>\r\n                <td>\r\n                    <select id=\"\" name=\"\" \r\n                        value={diplomskoDeloData.program ? diplomskoDeloData.program : el.program} onChange={(e) => setDiplomskoDeloData({...diplomskoDeloData, program: e.target.value})}\r\n                    >\r\n                        {catalogue && catalogue.program && catalogue.program.map((el) => {\r\n                        return (\r\n                            <option key={el.code} value={el.code}>{el.code}</option>\r\n                        )\r\n                        })}\r\n                    </select>\r\n                </td>\r\n                <td><input type=\"text\" value={diplomskoDeloData.naslov || diplomskoDeloData.naslov === \"\"  ? diplomskoDeloData.naslov : el.naslov} onChange={(e) => setDiplomskoDeloData({...diplomskoDeloData, naslov: e.target.value ? e.target.value : \"\"})} /></td>\r\n                <td><input type=\"date\" value={diplomskoDeloData.datum || diplomskoDeloData.datum === \"\" ? diplomskoDeloData.datum : formatDate(el.datum)} onChange={(e) => setDiplomskoDeloData({...diplomskoDeloData, datum: e.target.value ? e.target.value : \"\"})}/></td>\r\n                <td>\r\n                    <input type=\"text\" value={searchProfesor || searchProfesor === \"\" ? searchProfesor : el.profesor} onChange={(e) => {inputProfesorName(e)}}/>\r\n                    {\r\n                        results && <SuggestBox results={results && results} choosenElement={(profesor) => {chooseStudent(profesor)}} />\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <select id=\"\" name=\"\" \r\n                    value={diplomskoDeloData.zavod ? diplomskoDeloData.zavod : el.zavod} onChange={(e) => setDiplomskoDeloData({...diplomskoDeloData, zavod: e.target.value})}\r\n                    >\r\n                        {catalogue && catalogue.zavod && catalogue.zavod.map((el) => {\r\n                        return (\r\n                            <option key={el.code} value={el.code}>{el.code}</option>\r\n                        )\r\n                        })}\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    <select id=\"\" name=\"\" \r\n                    value={diplomskoDeloData.vrstaStudija ? diplomskoDeloData.vrstaStudija : el.zavod} onChange={(e) => setDiplomskoDeloData({...diplomskoDeloData, vrstaStudija: e.target.value})}\r\n                    >\r\n                        {catalogue && catalogue.vrstaStudija && catalogue.vrstaStudija.map((el) => {\r\n                        return (\r\n                            <option key={el.code} value={el.code}>{el.code}</option>\r\n                        )\r\n                        })}\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    {!readOnly && editable && \r\n                        <div className=\"d-flex flex-column\">\r\n                            <i className=\"fas fa-check\" onClick={() => {saveToDB(el.id); setEditable(false)}} />\r\n                            <i className=\"fas fa-times\" onClick={() => setEditable(false)}/>\r\n                        </div>\r\n                    }\r\n                </td>\r\n                </tr>\r\n              \r\n              return (\r\n                    whatToReturn\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n        <Paginator numberOfPages={numberOfPages} page={page} filtirajClick={i => filtirajClick(i)} />\r\n      </div>\r\n    )\r\n}","import moment from 'moment';\r\n\r\nexport const formatDate = (date) => {\r\n    return moment(date,  \"DD.MM.yyyy\").format('yyyy-MM-DD');\r\n}\r\n\r\nexport const formatDateToJavaDate = (date) => {\r\n    return moment(date).format('DD/MM/YYYY');\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport '../css/table.css';\r\nimport Checkbox from './Checkbox';\r\nimport Table from './Table';\r\n\r\nexport default function PregledDiplomskihDel(props) {\r\n  const [diplomskaDela, setDiplosmkaDela] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [numberOfPages, setNumberOfPages] = useState();\r\n  const [selectedProgramIds, setSelectedProgramIds] = useState([]);\r\n  const [selectedZavodsIds, setSelectedZavodIds] = useState([]);\r\n  const [selectedVrstaStudijaIds, setSelectedVrstaStudijaIds] = useState([]);\r\n  const [selectedProfesorIds, setSelectedProfesorIds] = useState([]);\r\n  const {program, zavod, vrstaStudija, profesor} = props.catalogue;\r\n  const [letoFilter, setLetoFilter] = useState();\r\n  const {leta} = props;\r\n\r\n  const filtirajClick = useCallback(\r\n    (page, programs = selectedProgramIds, zavods = selectedZavodsIds, vrste = selectedVrstaStudijaIds, profesors = selectedProfesorIds  ) => {\r\n      setPage(page);\r\n      fetch('/rest/diplomskaDela/filter', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ programs, vrste, zavods, profesors, leto: letoFilter, page: page })\r\n      })\r\n        .then(response => response.json())\r\n        .then(res => setDiplosmkaDela(res))\r\n  \r\n        fetch('/rest/diplomskaDela/count', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ programs, vrste, zavods, profesors, leto: letoFilter })\r\n        })\r\n          .then(response => response.json())\r\n          .then((result) => { setNumberOfPages(Math.ceil(result / 30)) })\r\n    },\r\n    [selectedProgramIds, selectedVrstaStudijaIds, selectedZavodsIds, selectedProfesorIds, letoFilter],\r\n  )\r\n\r\n    // useEffect(() => {\r\n    //   filtirajClick(1, props.programIds, props.zavodIds, props.vrstaIds, props.profesorIds);\r\n    // }, [])\r\n\r\n\r\n    const onProgramChangeHandler = (programId, selected) => {\r\n      const arr = [...selectedProgramIds];\r\n      if(selected) {\r\n        arr.push(programId)\r\n        setSelectedProgramIds(arr);\r\n      }\r\n      else {\r\n        let index = arr.indexOf(programId);\r\n        arr.splice(index, 1)\r\n        setSelectedProgramIds(arr);\r\n      }\r\n    }\r\n    \r\n    const onZavodChangeHandler = (zavodId, selected) => {\r\n      const arr = [...selectedZavodsIds];\r\n      if(selected) {\r\n        arr.push(zavodId)\r\n        setSelectedZavodIds(arr);\r\n      }\r\n      else {\r\n        let index = arr.indexOf(zavodId);\r\n        arr.splice(index, 1)\r\n        setSelectedZavodIds(arr);\r\n      }\r\n    }\r\n    \r\n    const onVrstaStudijaChangeHandler = (vrstaStudijaId, selected) => {\r\n      const arr = [...selectedVrstaStudijaIds];\r\n      if(selected) {\r\n        arr.push(vrstaStudijaId)\r\n        setSelectedVrstaStudijaIds(arr);\r\n      }\r\n      else {\r\n        let index = arr.indexOf(vrstaStudijaId);\r\n        arr.splice(index, 1)\r\n        setSelectedVrstaStudijaIds(arr);\r\n      }\r\n    }\r\n    \r\n    const onProfesorChangeHandler = (profesorId, selected) => {\r\n      const arr = [...selectedProfesorIds];\r\n      if(selected) {\r\n        arr.push(profesorId)\r\n        setSelectedProfesorIds(arr);\r\n      }\r\n      else {\r\n        let index = arr.indexOf(profesorId);\r\n        arr.splice(index, 1)\r\n        setSelectedProfesorIds(arr);\r\n      }\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <div className='d-flex flex-row'>\r\n      <div className=\"filter-element\" style={{width: '10%'}}>\r\n        <div>\r\n          <b>Vrsta študija</b>\r\n          \r\n          <div >\r\n          {\r\n            vrstaStudija && vrstaStudija.map((el, idx) => {\r\n              return(\r\n                <Checkbox key={idx} label={el.code} selected={false}\r\n                    onChange={(selected) => onVrstaStudijaChangeHandler(el.id, selected)} \r\n                 />\r\n              )\r\n            })\r\n          }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <b>Program</b>\r\n              {\r\n                program && program.map((el, idx) => {\r\n                  return(\r\n                    <Checkbox key={idx} label={el.code} selected={false} name={el.vrsta}\r\n                    onChange={(selected) => onProgramChangeHandler(el.id, selected)} \r\n                    />\r\n                  )\r\n                })\r\n              }\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <b>Zavod </b>\r\n          {\r\n                zavod && zavod.map((el, idx) => {\r\n                  return(\r\n                    <Checkbox key={idx} label={el.code} selected={false} \r\n                    onChange={(selected) => onZavodChangeHandler(el.id, selected)}\r\n                     />\r\n                  )\r\n                })\r\n              }\r\n          <br />\r\n        </div>\r\n        <div>\r\n          <b >Profesor </b>\r\n          <div style={{maxHeight: '300px', overflowY: 'scroll'}}>\r\n            {\r\n                  profesor && profesor.map((el, idx) => {\r\n                    return(\r\n                      <Checkbox key={idx} label={el.code} selected={false} \r\n                      onChange={(selected) => onProfesorChangeHandler(el.id, selected)}\r\n                      />\r\n                    )\r\n                  })\r\n                }\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div><b>Leto</b></div>\r\n          <label htmlFor='letnice'> Izberite leto: </label>\r\n          <select id=\"letnice\" name=\"letnice\" value={null}\r\n            onChange={(e) => setLetoFilter(e.target.value === \"\" ? null : e.target.value)}\r\n          >\r\n             <option key={null} value={null}>{null}</option>\r\n            {leta && leta.map((el) => {\r\n              return (\r\n                <option key={el} value={el}>{el}</option>\r\n              )\r\n            })}\r\n          </select>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        <div className=\"d-flex flex-column\">\r\n          {/* <button type=\"button\" className=\"btn btn-primary\" onClick={() =>  unselectAll()}>Odstrani filtre</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => {filtirajClick(1);}}>Filtriraj</button>\r\n          <button type=\"button\" className=\"btn btn-primary d-flex flex-row align-items-center text-center\" onClick={()=> window.open(\"/servlet/DiplomskaDela\", \"_blank\")}>\r\n            <div>Izvozi v PDF</div>\r\n            <i className=\"ml-3 fas fa-file-export\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div style={{width: '90%'}}>\r\n        <Table diplomskaDela={diplomskaDela && diplomskaDela} page={page && page} numberOfPages={numberOfPages && numberOfPages} filtirajClick={i => filtirajClick(i)} readOnly/>\r\n      </div>\r\n    </div>\r\n  </>\r\n  );\r\n}","import React, {} from 'react'\r\nimport { withRouter } from 'react-router';\r\nimport '../css/style.css';\r\n\r\nconst AdminNavBar = (props) => {\r\n\r\n    const {catalogue} = props;\r\n    const roles = catalogue.roles;\r\n\r\n    const handleClick = (str) => {\r\n        props.history.push(str)\r\n    }\r\n\r\n    return (\r\n        <div style={{borderBottom: '1px solid black'}} className=\"d-flex flex-row justify-content-between align-items-center\">\r\n            <ul>\r\n\r\n                <li onClick={() => handleClick('/admin/addChange')}>Dodaj ali spremeni šifrante</li>\r\n                <li onClick={() => handleClick('/admin/addDiplomskoDelo')}>Dodaj diplomsko delo</li>\r\n                <li onClick={() => handleClick('/admin/addUser')}>Dodaj uporabnika</li>\r\n\r\n                {/* {\r\n                    (roles.indexOf('add_sifrant') !== -1 || roles.indexOf('change_sifrant') !== -1) &&\r\n                        <li onClick={() => handleClick('/admin/addChange')}>Dodaj ali spremeni šifrante</li>\r\n                }\r\n                   {\r\n                    (roles.indexOf('add_diploma') !== -1 || roles.indexOf('change_diploma') !== -1) &&\r\n                    <li onClick={() => handleClick('/admin/addDiplomskoDelo')}>Dodaj diplomsko delo</li>\r\n                }\r\n                   {\r\n                    (roles.indexOf('add_user') !== -1 || roles.indexOf('change_user') !== -1) &&\r\n                    <li onClick={() => handleClick('/admin/addUser')}>Dodaj uporabnika</li>\r\n                } */}\r\n\r\n\r\n\r\n            </ul>\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                    fetch('/servlet/logout', {\r\n                        method: 'GET',\r\n                      }).then(() => {\r\n                        props.history.push('/admin');\r\n                        window.location.reload();\r\n                      })\r\n                }\r\n                } >Logout</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(AdminNavBar);\r\n","import React from 'react'\r\nimport AdminNavBar from './AdminNavBar'\r\n\r\nexport default function Admin({catalogue}) {\r\n    return (\r\n        <div>\r\n              <AdminNavBar catalogue={catalogue} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\n\r\nexport default function AddChangeSifrantiTable({value, title, label, twoInputs, reFetchCatalogue}) {\r\n    const [hoovered, setHoovered] = useState(false);\r\n    const [clicked, setClicked] = useState(false);\r\n    const [stevilka, setStevilka] = useState();\r\n    const [vrsta, setVrsta] = useState();\r\n\r\n    const save = () => {\r\n        switch(label){\r\n            case 'program': {\r\n                fetch('/rest/program/add', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({code: stevilka, vrsta: vrsta})\r\n                })\r\n                .then((resp) => reFetchCatalogue())\r\n                break;\r\n            }\r\n            case 'profesor': {\r\n                fetch('/rest/profesor/add', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({imePriimek: vrsta})\r\n                })\r\n                .then(() => reFetchCatalogue())\r\n                break;\r\n            }\r\n            case 'vrstaStudija': {\r\n                fetch('/rest/vrstaStudija/add', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({code: stevilka, vrsta: vrsta})\r\n                })\r\n                .then(() => reFetchCatalogue())\r\n                break;\r\n            }\r\n            case 'zavod': {\r\n                fetch('/rest/zavod/add', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({zavod: vrsta, code: stevilka})\r\n                })\r\n                .then(() => reFetchCatalogue())\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    const remove = (code) => {\r\n        switch(label){\r\n            case 'program': {\r\n                fetch('/rest/program/remove', {\r\n                    method: 'DELETE',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({code: code})\r\n                })\r\n                .then(() => reFetchCatalogue())\r\n                break;\r\n            }\r\n            case 'profesor': {\r\n                fetch('/rest/profesor/remove', {\r\n                    method: 'DELETE',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({imePriimek: code})\r\n                })\r\n                .then(() => reFetchCatalogue())\r\n                break;\r\n            }\r\n            case 'vrstaStudija': {\r\n                fetch('/rest/vrstaStudija/remove', {\r\n                    method: 'DELETE',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({vrsta: code})\r\n                })\r\n                .then(() => reFetchCatalogue())\r\n                break;\r\n            }\r\n            case 'zavod': {\r\n                fetch('/rest/zavod/remove', {\r\n                    method: 'DELETE',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({code: code})\r\n                })\r\n                .then(() => reFetchCatalogue())\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{width: '300px'}}>\r\n            <div className=\"border border-dark\">\r\n                <div className=\"border-bottom border-dark\">{title}: </div>\r\n                    <div>\r\n                        {\r\n                            value && value.map((el, idx) => {\r\n                                return(\r\n                                    <div key={idx} className=\"d-flex flex-row justify-content-between\">\r\n                                        <div\r\n                                            >{el.code}\r\n                                        </div>\r\n                                        <i \r\n                                        className={'fa fa-1x fa-trash ' + (hoovered === idx ? 'text-primary' : '')} \r\n                                        onMouseEnter={() => setHoovered(idx)} \r\n                                        onMouseLeave={() => setHoovered(null)}\r\n                                        onClick={() => remove(el.code)}\r\n                                    />\r\n                                    </div>\r\n                                    \r\n                                );\r\n                            })\r\n                        }\r\n                        <div>\r\n                            {\r\n                            clicked ?\r\n                                <div className=\"d-flex flex-row\">\r\n                                    <i className=\"fas fa-2x fa-times\" onClick={() => {setClicked(false);  setStevilka(null); setVrsta(null);}}></i>\r\n                                    <div className=\"d-flex flex-row\">\r\n                                        {twoInputs ? \r\n                                        <div>\r\n                                            <input className=\"w-50\" type=\"text\" placeholder=\"del vpisne st\" value={stevilka || ''} onChange={e => setStevilka(e.target.value)}></input>\r\n                                            <input className=\"w-50\" type=\"text\" placeholder=\"ime\" value={vrsta || ''} onChange={e => setVrsta(e.target.value)}></input>\r\n                                        </div>\r\n                                        :\r\n                                        <input className=\"w-100\" type=\"text\" placeholder=\"ime in priimek\" value={vrsta || ''} onChange={e => setVrsta(e.target.value)}></input>\r\n                                        }\r\n                                    </div>\r\n                                    <i className=\"fas fa-2x fa-check\" onClick={() => {setClicked(false); save(); setStevilka(null); setVrsta(null);}}></i>\r\n                                </div>\r\n                            :\r\n                                <div>\r\n                                    <i className=\"fas fa-2x fa-plus-circle\" onClick={() => setClicked(true)}></i> \r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport AddChangeSifrantiTable from './AddChangeSifrantiTable';\r\nimport AdminNavBar from './AdminNavBar';\r\n\r\nexport default function AddChangeSifranti({catalogue, reFetchCatalogue}) {\r\n\r\n    const {zavod, profesor, vrstaStudija, program} = catalogue;\r\n\r\n    return (\r\n        <>\r\n        <AdminNavBar catalogue={catalogue} />\r\n        <div className=\"d-flex flex-row justify-content-around pt-2\">\r\n              <AddChangeSifrantiTable reFetchCatalogue={reFetchCatalogue()} twoInputs={false} label={'profesor'} value={profesor} title={'Profesor'} />\r\n              <AddChangeSifrantiTable reFetchCatalogue={reFetchCatalogue()} twoInputs label={'program'} value={program} title={'Program'} />\r\n              <AddChangeSifrantiTable reFetchCatalogue={reFetchCatalogue()} twoInputs label={'zavod'} value={zavod} title={'Zavod'} />\r\n              <AddChangeSifrantiTable reFetchCatalogue={reFetchCatalogue()} twoInputs label={'vrstaStudija'} value={vrstaStudija} title={'Vrsta studija'} />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport Table from '../combined/Table';\r\nimport { formatDateToJavaDate } from '../util/dateFormat';\r\nimport AdminNavBar from './AdminNavBar'\r\nimport SuggestBox from './SuggestBox';\r\n\r\nexport default function ChangeDiplomskoDelo({ catalogue }) {\r\n  const [file, setFile] = useState(null);\r\n  const [studentSearch, setStudentSearch] = useState(null);\r\n  const [results, setResults] = useState(null);\r\n  const [diplomskaDela, setDiplomskaDela] = useState(null);\r\n  const [novoDiplomskoDelo, setNovoDiplomskoDelo] = useState({});\r\n  const [, setSearchProfesor] = useState();\r\n  const [profesorResults, setProfesorResults] = useState();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    let formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    fetch('/servlet/UploadExcelFileServlet', {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n  };\r\n\r\n  const fileUpload = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const inputStudentName = (e) => {\r\n    setStudentSearch(e.target.value);\r\n    if (e.target.value !== \"\") {\r\n      fetch('/rest/diplomskaDela/search', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'text/html' },\r\n        body: e.target.value,\r\n      })\r\n        .then(response => response.json())\r\n        .then(res => setResults(res.strings))\r\n      setDiplomskaDela(null);\r\n    }\r\n    else {\r\n      setResults(null);\r\n      setDiplomskaDela(null);\r\n    }\r\n  }\r\n\r\n  const inputProfesorName = (e) => {\r\n    setSearchProfesor(e.target.value);\r\n    if(e.target.value !== \"\") {\r\n      fetch('/rest/profesor/search', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'text/html' },\r\n        body: e.target.value,\r\n      })\r\n      .then(response => response.json())\r\n      .then(res => setProfesorResults(res.strings))\r\n    }\r\n    else {\r\n      setProfesorResults(null);\r\n    }\r\n  }\r\n\r\n  const chooseStudent = (diplomskoDelo) => {\r\n    setStudentSearch(diplomskoDelo);\r\n    setResults(null);\r\n    fetch('/rest/diplomskaDela/getDiplomskoDeloByIme', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'text/html' },\r\n      body: diplomskoDelo,\r\n    })\r\n      .then(response => response.json())\r\n      .then(res => setDiplomskaDela(res))\r\n  }\r\n\r\n  const chooseProfesor = (profesor) => {\r\n    setSearchProfesor(profesor); \r\n    setProfesorResults(null); \r\n    setNovoDiplomskoDelo({...novoDiplomskoDelo, imeProf: profesor})\r\n  }\r\n\r\n  const shraniDiplomskoDelo = () => {\r\n    const obj = {...novoDiplomskoDelo, datumDiplome: formatDateToJavaDate(novoDiplomskoDelo.datumDiplome)}  \r\n    fetch('/rest/diplomskaDela/addDiplomskoDelo', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(obj),\r\n      })\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <AdminNavBar catalogue={catalogue} />\r\n      <div>\r\n        <div className=\"text-primary\">\r\n          Spremeni diplomsko delo\r\n          </div>\r\n        <div className=\"d-flex flex-row justify-content-between\" >\r\n          <div style={{ width: '203px' }}>\r\n            <div className=\"d-flex flex-column\">\r\n              <div className=\"text-primary\">Išči študenta:</div>\r\n              <input type=\"text\" value={studentSearch || ''} onChange={(e) => { inputStudentName(e) }} />\r\n              {\r\n                results && <SuggestBox results={results && results} choosenElement={diplomskoDelo => chooseStudent(diplomskoDelo)} />\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"w-75\">\r\n            {diplomskaDela && <Table diplomskaDela={diplomskaDela} readOnly={false} catalogue={catalogue} reFetchDiplomskaDela={data => chooseStudent(data)} studentSearch={studentSearch} />}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <hr />\r\n          <div>\r\n            <div className=\"text-primary\">\r\n              Dodaj diplomska dela\r\n              </div>\r\n            <div>\r\n              <form>\r\n                <input\r\n                  type='file'\r\n                  id='file'\r\n                  name='file'\r\n                  onChange={(e) => fileUpload(e)}\r\n                />\r\n                <button onClick={(e) => onSubmit(e)}>Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <div className=\"text-primary\">\r\n              Dodaj diplomsko delo\r\n              </div>\r\n            <div>\r\n            <div className=\"d-flex flex-row\">\r\n                <div className=\"text-primary\">\r\n                  Vpisna številka:\r\n                </div>\r\n                <input type=\"text\" value={novoDiplomskoDelo.vpisnaStevilka || ''} onChange={(e) => { setNovoDiplomskoDelo({...novoDiplomskoDelo, vpisnaStevilka: e.target.value}) }} />\r\n              </div>\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"text-primary\">\r\n                  Ime študenta:\r\n                </div>\r\n                <input type=\"text\" value={novoDiplomskoDelo.imeDijaka || ''} onChange={(e) => { setNovoDiplomskoDelo({...novoDiplomskoDelo, imeDijaka: e.target.value}) }} />\r\n              </div>\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"text-primary\">\r\n                  Naslov:\r\n                </div>\r\n                <input type=\"text\" value={novoDiplomskoDelo.imeDiplome || ''} onChange={(e) => { setNovoDiplomskoDelo({...novoDiplomskoDelo, imeDiplome: e.target.value}) }} />\r\n              </div>\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"text-primary\">\r\n                  Datum:\r\n                </div>\r\n                <input type=\"date\" value={novoDiplomskoDelo.datumDiplome || ''} onChange={(e) => { setNovoDiplomskoDelo({...novoDiplomskoDelo, datumDiplome: e.target.value}) }} />\r\n              </div>\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"text-primary\">\r\n                  Mentor:\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n                  <input type=\"text\" value={novoDiplomskoDelo.imeProf || ''} onChange={(e) => { inputProfesorName(e); setNovoDiplomskoDelo({...novoDiplomskoDelo, imeProf: e.target.value}) }} />\r\n                  {\r\n                    profesorResults && <SuggestBox results={profesorResults && profesorResults} choosenElement={(profesor) => {chooseProfesor(profesor)}} />\r\n                  }\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"d-flex flex-row\">\r\n                <div className=\"text-primary\">\r\n                  Zavod:\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n                <select id=\"\" onChange={(e) => setNovoDiplomskoDelo({...novoDiplomskoDelo, zavod: e.target.value})}>\r\n                    {\r\n                      catalogue.zavod.map((el, idx) => {\r\n                        return(\r\n                          <option key={idx} value={el.code}>{el.code}</option>\r\n                        )\r\n                      })\r\n                    }\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"text-primary\">\r\n                  Program:\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n                  <select id=\"\" onChange={(e) => setNovoDiplomskoDelo({...novoDiplomskoDelo, program: e.target.value})}>\r\n                    {\r\n                      catalogue.program.map((el, idx) => {\r\n                        return(\r\n                          <option key={idx} value={el.code}>{el.code}</option>\r\n                        )\r\n                      })\r\n                    }\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex flex-row\">\r\n                <div className=\"text-primary\">\r\n                  Vrsta studija:\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n                  <select id=\"\" onChange={(e) => setNovoDiplomskoDelo({...novoDiplomskoDelo, vrstaStudija: e.target.value})}>\r\n                    {\r\n                      catalogue.vrstaStudija.map((el, idx) => {\r\n                        return(\r\n                          <option key={idx} value={el.code}>{el.code}</option>\r\n                        )\r\n                      })\r\n                    }\r\n                  </select>\r\n                </div>\r\n              </div> */}\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={() => {shraniDiplomskoDelo()}}> Shrani</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )}","import React, { useState } from 'react'\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nexport default function AddUserModal({onCloseHandle, show, fetchUsers}) {\r\n\r\n    const [usernamePass, setUsernamePass] = useState({});\r\n\r\n    const saveToDatabase = () => {\r\n        fetch('/rest/uporabnik/saveNewUser',\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                username: usernamePass.username,\r\n                password: usernamePass.password\r\n        })\r\n        })\r\n        .then(() => fetchUsers())\r\n    }\r\n\r\n    return (\r\n        <Modal show={show}>\r\n            <div style={{ padding: '8px', backgroundColor: '#3e444a', color: 'white' }}>\r\n                <div className=\"modalElement d-flex flex-column\" style={{maxWidth: '300px', width: '300px'}}>\r\n                    <div className=\"d-flex flex-row\">\r\n                        <div>\r\n                            Username:\r\n                    </div>\r\n                        {\r\n                                <input type=\"text\" value={usernamePass ? usernamePass.username : ''} onChange={(e) => setUsernamePass({...usernamePass, username: e.target.value})} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"d-flex flex-row\">\r\n                        <div>\r\n                            Password:\r\n                    </div>\r\n                        {\r\n                                <input type=\"text\" value={usernamePass ? usernamePass.password : ''} onChange={(e) => setUsernamePass({...usernamePass, password: e.target.value})} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => { onCloseHandle() }}>Zaključi</button>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => { saveToDatabase(); onCloseHandle() }}>Shrani</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nexport default function ChnageRolesModal({ show, onCloseHandle, uporabnik, role, catalogue, reFetchRolesForUser }) {\r\n\r\n    const [usernamePass, setUsernamePass] = useState();\r\n    const [editable, setEditable] = useState(false);\r\n    const allRoles = catalogue.allRoles;\r\n\r\n    useEffect(() => {\r\n        if (uporabnik) {\r\n            fetch('/rest/uporabnik/byUsername',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: uporabnik\r\n                })\r\n                .then(response => response.json())\r\n                .then(res => setUsernamePass(res))\r\n        }\r\n    }, [uporabnik])\r\n\r\n    const addRole = (el) => {\r\n        fetch('/rest/uporabnik/add',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username: uporabnik, role: el })\r\n            })\r\n            .then(res => reFetchRolesForUser(uporabnik))\r\n    }\r\n\r\n    const removeRole = (el) => {\r\n        fetch('/rest/uporabnik/remove',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ username: uporabnik, role: el })\r\n            })\r\n            .then(res => reFetchRolesForUser(uporabnik))\r\n    }\r\n\r\n    const saveToDatabase = () => {\r\n        fetch('/rest/uporabnik/saveByUsername',\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                username: usernamePass.username,\r\n                password: usernamePass.password\r\n        })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal show={show}>\r\n            <div style={{ padding: '8px', backgroundColor: '#3e444a', color: 'white' }}>\r\n                <div className=\"d-flex flex-column\">\r\n                    <div>\r\n                        <h1>{uporabnik && uporabnik}</h1>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"d-flex flex-row justify-content-between\">\r\n                        <div className=\"modalElement\">\r\n                            {\r\n                                allRoles && allRoles.map((el, idx) => {\r\n                                    let colorBlue = false;\r\n                                    role && role.map((ele) => {\r\n                                        if (el === ele)\r\n                                            colorBlue = true;\r\n                                        return null;\r\n                                    });\r\n                                    return (\r\n                                        <div key={idx}>\r\n                                            {\r\n                                                colorBlue ?\r\n                                                    <div className=\"d-flex flex-row align-items-center text-primary justify-content-between\">\r\n                                                        <div>{el}</div>\r\n                                                        <i className=\"fas fa-lg fa-minus faminus ml-2\" onClick={() => removeRole(el)}></i>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"d-flex flex-row align-items-center justify-content-between\">\r\n                                                        <div>{el}</div>\r\n                                                        <i className=\"fas fa-lg fa-plus faplus\" onClick={() => addRole(el)}></i>\r\n                                                    </div>\r\n                                            }\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"modalElement d-flex flex-column\" style={{maxWidth: '300px', width: '300px'}}>\r\n                            <div className=\"d-flex flex-row\">\r\n                                <div>\r\n                                    Username:\r\n                            </div>\r\n                                {\r\n                                    // editable ?\r\n                                    //     <input type=\"text\" value={usernamePass && usernamePass.username} onChange={(e) => setUsernamePass({...usernamePass, : e.target.value})} />\r\n                                    //     :\r\n                                        <div>\r\n                                            {usernamePass && usernamePass.username}\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                            <div className=\"d-flex flex-row\">\r\n                                <div>\r\n                                    Password:\r\n                            </div>\r\n                                {\r\n                                    editable ?\r\n                                        <input type=\"text\" value={usernamePass && usernamePass.password} onChange={(e) => setUsernamePass({...usernamePass, password: e.target.value})} />\r\n                                        :\r\n                                        <div>\r\n                                            {usernamePass && usernamePass.password}\r\n                                        </div>\r\n                                }\r\n                            </div>\r\n                            {\r\n                                editable ?\r\n                                    <div>\r\n                                        <button className=\"btn btn-primary\" onClick={() => {setEditable(false); saveToDatabase();}} >Shrani</button>\r\n                                    </div>\r\n                                    :\r\n                                    <div>\r\n                                        <i className=\"fas fa-edit iconOnHover\" onClick={() => setEditable(true)} />\r\n                                    </div>\r\n                            }\r\n                            {/* <div>{usernamePass && usernamePass.username}</div>\r\n                        <div>{usernamePass && usernamePass.password}</div> */}\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => { onCloseHandle() }}>Zaključi</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport AddUserModal from '../modals/AddUserModal';\r\nimport ChnageRolesModal from '../modals/ChnageRolesModal';\r\n\r\nexport default function AddUser({ catalogue  }) {\r\n\r\n    const [choosenUser, setChoosenUser] = useState();\r\n    const [uporabniki, setUporabniki] = useState();\r\n    const [role, setRole] = useState();\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showModalAddUser, setShowModalAddUser] = useState(false);\r\n\r\n    const fetchUsers = useCallback(() => {\r\n        fetch('/rest/uporabnik/getAll')\r\n            .then(response => response.json())\r\n            .then(res => setUporabniki(res))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, [fetchUsers])\r\n\r\n    const fetchRoles = useCallback((user) => {\r\n        fetch('/rest/catalogue/getAllRolesForUser',\r\n        {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: user\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => setRole(res))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [choosenUser])\r\n\r\n    useEffect(() => {\r\n        if (choosenUser) {\r\n            fetch('/rest/catalogue/getAllRolesForUser',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: choosenUser\r\n            })\r\n            .then(response => response.json())\r\n            .then(res => setRole(res))\r\n        }\r\n    }, [choosenUser])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row justify-content-between\">\r\n            <div className=\"d-flex flex-row\">\r\n\r\n                <table className=\"table table-striped table-dark\" style={{ width: '150px' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                Uporabnik\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            uporabniki && uporabniki.map((el, idx) => {\r\n                                return (\r\n                                    <tr className={choosenUser === el.username ? 'text-primary' : ''} key={idx} onClick={() => setChoosenUser(el.username)}>\r\n                                        <td style={{ padding: \"12px\" }}>\r\n                                            <div className=\"d-flex flex-row justify-content-between\">\r\n                                                <div>{el.username}</div>\r\n                                                <i className=\"far fa-edit iconOnHover\"  onClick={() => setShowModal(true)}></i>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                {\r\n\r\n                    <table className=\"table table-striped table-dark ml-5\" style={{ width: '150px' }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    Vloga\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                role && role.map((el, idx) => {\r\n\r\n                                    return (\r\n                                        <tr key={idx}>\r\n                                            <td>\r\n                                                {el}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n            </div>\r\n            <div className=\"addNewUser\" onClick={() => setShowModalAddUser(true)}>\r\n                <button type=\"button\" className=\"btn btn-primary\">Dodaj novega uporabnika</button>\r\n            </div>\r\n            {\r\n                showModal && <ChnageRolesModal show={showModal} onCloseHandle={() => {setShowModal(false)}} uporabnik={choosenUser} role={role} catalogue={catalogue} reFetchRolesForUser={(user) => fetchRoles(user)} />\r\n            }\r\n            {\r\n                showModalAddUser && <AddUserModal show={showModalAddUser} onCloseHandle={() => {setShowModalAddUser(false)}} fetchUsers={() => fetchUsers()} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {} from 'react'\r\nimport AddUser from './AddUser'\r\nimport AdminNavBar from './AdminNavBar'\r\n\r\nexport default function AddChangeUser({catalogue}) {\r\n\r\n    return (\r\n        <div>\r\n            <AdminNavBar catalogue={catalogue} />\r\n            <div>\r\n               <AddUser catalogue={catalogue} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PregledDiplomskihDel from './combined/PregledDiplomskihDel';\nimport './css/fonts.css';\nimport Admin from './admin/Admin';\nimport AddChangeSifranti from './admin/AddChangeSifranti';\nimport ChangeDiplomskoDelo from './admin/ChangeDiplomskoDelo';\nimport AddUser from './admin/AddChangeUser';\nimport AddChangeUser from './admin/AddChangeUser';\n\nfunction App() {\n  const [catalogue, setCatalogue] = useState();\n  const [programs, setPrograms] = useState();\n  const [vrstaStudija, setVrstaStudija] = useState();\n  const [zavods, setZavods] = useState();\n  const [profesor, setProfesor] = useState();\n  const [leta, setLeta] = useState();\n\n  useEffect(() => {\n\n    fetchCatalogue();\n\n    fetch(`/rest/zavod/getListOfIds`)\n    .then((res) => res.json())\n    .then((result) => {\n      setZavods(result);\n    });\n\n    fetch(`/rest/program/getListOfIds`)\n    .then((res) => res.json())\n    .then((result) => {\n      setPrograms(result);\n    });\n\n    fetch(`/rest/vrstaStudija/getListOfIds`)\n    .then((res) => res.json())\n    .then((result) => {\n      setVrstaStudija(result);\n    });\n\n    fetch(`/rest/profesor/getListOfIds`)\n    .then((res) => res.json())\n    .then((result) => {\n      setProfesor(result);\n    });\n\n    fetch(`/rest/diplomskaDela/leto`)\n    .then((res) => res.json())\n    .then((result) => {\n      setLeta(result);\n    });\n\n  }, [])\n\n  const fetchCatalogue = () => {\n    fetch(`/rest/catalogue/getAll`)\n    .then((res) => res.json())\n    .then((result) => {\n      setCatalogue(result);\n    });\n  }\n\n\n  return (\n    <>\n    {\n      catalogue && programs && vrstaStudija && zavods && profesor && leta && \n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <PregledDiplomskihDel catalogue={catalogue} programIds={programs} zavodIds={zavods} vrstaIds={vrstaStudija} profesorIds={profesor} leta={leta} />\n          </Route>\n          <Route exact path='/admin'>\n            <Admin catalogue={catalogue} />\n          </Route>\n          <Route exact path='/admin/addChange'>\n            <AddChangeSifranti catalogue={catalogue} reFetchCatalogue={() => fetchCatalogue} />\n          </Route>\n          <Route exact path='/admin/addDiplomskoDelo'>\n            <ChangeDiplomskoDelo catalogue={catalogue} />\n          </Route>\n          <Route exact path='/admin/addUser'>\n            <AddChangeUser catalogue={catalogue} />\n          </Route>\n        </Switch>\n      </Router>\n    }\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}